continue
order_params
continue
params
exit
params
exit
params
exit
num_slices = params[:num_slices].to_i
@pizzas
pizzas
exit
num_slices = params[:num_slices].to_i
num_slices.to_i
params
exit
params
exit
disable-byebug
continue
@order.save
@order.slices
@order
continue
exit
order.errors
order.save
order.event = Event.find(params[:event_id])
order.user = current_user
order.save
order.slices
order = Order.new(order_params)
order = _
Order.new(order_params)
order_params
params
exit
order_params
order.errors
order.save
order
order.slices
params
order.slices.each { |slice| slice.save }
order.slices.save
order.errors.full_messages
order.save
order.event = Event.find(params[:event_id])
order.user = current_user
order.slices
order = Order.new(order_params)
exit
order.slices.count
order.slices
order = Order.new(order_params)
exit
params
exit
@order.slices.count
@order.slices
@order
exit
params[:event_id]
params
params[:order]
params[:num_slices]
params
exit
continue
@event.president
@event.user
current_user
@event
params
exit
@event.errors
@event.save
@event
exit
@date
date
@date = Chronic::parse(date)
exit
date = Chronic::parse(event_params[:date])
@event
@event.date = event_params[:date]
@event
exit
Chronic::parse(date)
exit
event.save
event = Event.new(event_params)
exit
event = Event.new(event_params)
exit
event.date
event.date = Chronic::parse(event_params[:date])
event = Event.new
Chronic::parse(event_params[:date])
event_params
exit
date = Date.strftime("03-17-2016 06:30", "%m-%d-%Y %H:%M")
date = Date.strptime("03-17-2016 06:30", "%m-%d-%Y %H:%M")
event.date.class
event
event.date = date
date = Date.strptime(date, "%m-%d-%Y")
Date.strptime(date, "%m-%d-%Y").class
Date.strptime(date, "%m-%d-%Y")
Date.strptime(date, "%m-%d%Y")
DateTime.Parse(date)
DateTime.parse(date)
date = "03-17-2016"
DateTime.parse(date)
date = "03/17/2016"
DateTime.parse(event_params[:date])
event
Event.all.first.date.class
Event.all.first
event_params[:date].to_datetime
event_params[:date].class
event = Event.new(event_params)
event_params
current_user
params
exit
date
date = _
date.to_datetime
date
30.minutes
deadline.class
deadline > (date - 1.hours)
deadline > date - 1.hours
date >= (deadline - 1.hours)
date >= deadline - 1.hours
date >= deadline = 1.hours
date <= deadline - 1.hours
date <= (deadline - 1.hours)
