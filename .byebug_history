exit
@event.errors
@event.save
@event
exit
@date
date
@date = Chronic::parse(date)
exit
date = Chronic::parse(event_params[:date])
@event
@event.date = event_params[:date]
@event
exit
Chronic::parse(date)
exit
event.save
event = Event.new(event_params)
exit
event = Event.new(event_params)
exit
event.date
event.date = Chronic::parse(event_params[:date])
event = Event.new
Chronic::parse(event_params[:date])
event_params
exit
date = Date.strftime("03-17-2016 06:30", "%m-%d-%Y %H:%M")
date = Date.strptime("03-17-2016 06:30", "%m-%d-%Y %H:%M")
event.date.class
event
event.date = date
date = Date.strptime(date, "%m-%d-%Y")
Date.strptime(date, "%m-%d-%Y").class
Date.strptime(date, "%m-%d-%Y")
Date.strptime(date, "%m-%d%Y")
DateTime.Parse(date)
DateTime.parse(date)
date = "03-17-2016"
DateTime.parse(date)
date = "03/17/2016"
DateTime.parse(event_params[:date])
event
Event.all.first.date.class
Event.all.first
event_params[:date].to_datetime
event_params[:date].class
event = Event.new(event_params)
event_params
current_user
params
exit
date
date = _
date.to_datetime
date
30.minutes
deadline.class
deadline > (date - 1.hours)
deadline > date - 1.hours
date >= (deadline - 1.hours)
date >= deadline - 1.hours
date >= deadline = 1.hours
date <= deadline - 1.hours
date <= (deadline - 1.hours)
