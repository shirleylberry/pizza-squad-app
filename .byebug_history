exit
<<<<<<< HEAD
=======
self.orders.empty?
self.orders.present?
self.orders.nil?
self.orders
event
self
continue
pies_slices_hash
continue
pies_slices_hash
continue
pies_slices_hash
exit
event
exit
event.errors
event,errors
event,error
event
continue
exit
@user.errors
@user.save
      @user = User.create(name: "Jeff Winger", email: "jeff@coollawyer.com", password: "pierceisweird")
@user
@pres_user
event.errors
event.save
event = Event.create(date: "2016-09-19 07:03:30 -0700", deadline: "2016-09-19 05:03:30 -0700", title: "FSP Pizza Party", description: "yum pizza yum", president: @president)
event = _
Event.create(date: "2016-09-19 07:03:30 -0700", deadline: "2016-09-19 05:03:30 -0700", title: "FSP Pizza Party", description: "yum pizza yum", president: @president)
@event
exit
self
exit
get_pie_types_counts_hash
pie_types_hash
self
exit
@event.determine_
@event.class
@event
@event.determine_slices_pies
@event
exit
slices_pies
next
slices_pies
exit
@event.determine_slices_pies
@event
continue
@event
exit
eit
@event
continue
@event
exit
@event
exit
35 % 8
users
exit
event.orders
continue
pies_slices_hash
peis_slices_hash
continue
pie_types_hash
pies_slices_hash
continue
pies_slices_hash
continue
pies_slices_hash
pie_types_hash
pie_types_hahs
continue
pies_slices_hash
continue
pies_slices_hash
number
exit
pie_types_hash
pie_typ
number
continue
pies_slices_hash
continue
pie_types_hash
pies_slices_hash
continue
pies_slices_hash
continue
pies_slices_hash
pie_types_hash
continue
remainder
exit
remainder
continue
pie_types_hash
pies_slices_hash
number
continue
pie_types_hash
pies_slices_hash
continue
pies_slices_hash
continue
pie_types_hash
pies_slices_hash
topping
number
continue
topping
pies_slices_hash
continue
topping
continue
pies_slices_hash
pies_slices_hash[:pies][topping] = number / 8
topping
pies_slices_hash[:slices][topping]
pies_slices_hash[:slices][topping] = number % 8
pies_slices_hash[:slices][topping]
pies_slices_hash
pie_types_hash
exit
orders_hash.values
orders_hash.keys
orders_hash
pie_types.keys
orders_hash
exit
orders_hash
exit
orders_hash
exit
event.total_pies
event.slices.count
event = Event.all.last
order.slices.count
toppings_hash
exit
>>>>>>> 40f5fcc2e797d1d04f1774fd9ba4895a9e854db6
x.empty?
x= []
x
exit
x
exit
event.date.day == Time.now.day
event.date.month == Time.now.month
event.date.month
event.month
Time.now.day
Day.now
Time.now
event.date.day
event.date
event
continue
result["data"][:image_url]
result["data"]["image_url"]
result["data"]
result
continue
result["data"].first["url"]
buffer.class
result["data"].class
result.class
result["data"]
exit
@slices
@slices = num_slices.times {@order.slices.build}
num_slices.times {@order.slices.build}
num_slices = @order.slices.count + 1
@event
@order
params
<<<<<<< HEAD
exit
orders_hash.values
orders_hash.keys
orders_hash
pie_types.keys
orders_hash
exit
orders_hash
exit
orders_hash
exit
event.total_pies
event.slices.count
event = Event.all.last
order.slices.count
toppings_hash
=======
>>>>>>> 40f5fcc2e797d1d04f1774fd9ba4895a9e854db6
exit
continue
order_params
continue
params
exit
params
exit
params
exit
num_slices = params[:num_slices].to_i
@pizzas
pizzas
exit
num_slices = params[:num_slices].to_i
num_slices.to_i
params
exit
params
exit
disable-byebug
continue
@order.save
@order.slices
@order
continue
exit
order.errors
order.save
order.event = Event.find(params[:event_id])
order.user = current_user
order.save
order.slices
order = Order.new(order_params)
order = _
Order.new(order_params)
order_params
params
exit
order_params
order.errors
order.save
order
order.slices
params
order.slices.each { |slice| slice.save }
order.slices.save
order.errors.full_messages
order.save
order.event = Event.find(params[:event_id])
order.user = current_user
order.slices
order = Order.new(order_params)
exit
order.slices.count
order.slices
order = Order.new(order_params)
exit
params
exit
@order.slices.count
@order.slices
@order
exit
params[:event_id]
params
params[:order]
params[:num_slices]
params
exit
continue
@event.president
@event.user
current_user
@event
